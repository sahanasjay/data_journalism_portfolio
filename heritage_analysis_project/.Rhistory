arrange(state)%>%
mutate(side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ side
))%>%
select(-n)
View(side)
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
group_by(state, side)%>%
count()%>%
filter(!is.na(side))%>%
arrange(state)%>%
mutate(side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ side
))%>%
select(-n)%>%
distinct()
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
group_by(state, side)%>%
count()%>%
filter(!is.na(side))%>%
arrange(state)%>%
mutate(side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ side
))%>%
select(-n)%>%
distinct()%>%
group_by(state)%>%
count()
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
group_by(state, side)%>%
count()%>%
filter(!is.na(side))%>%
arrange(state)%>%
mutate(side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))
View(heritagex)
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))
View(side)
View(heritagex)
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))
View(heritagex)
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)%>%
group_by(state, side)%>%
count()
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)%>%
group_by(state, side)%>%
count()%>%
group_by(state)%>%
coutn()
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritagex<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)%>%
group_by(state, side)%>%
count()%>%
group_by(state)%>%
count()
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritage<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(n())
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
heritage%>%
filter( state =="VA", is.na(side))
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(count = n())%>%
arrange(desc(count))
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
heritage%>%
filter( state =="VA", is.na(side))
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(count = n())%>%
arrange(desc(count))
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
heritage%>%
filter( state =="VA", is.na(side))
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(count = n())%>%
arrange(desc(count))
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
heritage%>%
filter( state =="DC", is.na(side))
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(count = n())%>%
arrange(desc(count))
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
heritage%>%
filter( state =="DC")
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(count = n())%>%
arrange(desc(count))
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
dc <-heritage%>%
filter( state =="DC")
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
View(dc)
install.packages(leaflet)
library(tidyverse)
library(janitor)
install.packages("leaflet")
library(tidyverse)
library(janitor)
# install.packages("leaflet")
library(tidyverse)
library(janitor)
library(leaflet)
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()%>%
separate(coordinates, into = c("lat", "lng"),sep =",")
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritage<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = lat, lng = lng)
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = lat, lng = lng)
glimpse(heritage)
heritage<- read_csv("data/whose_heritage.csv")%>%
clean_names()%>%
separate(coordinates, into = c("lat", "lng"),sep =",")%>%
mutate(lat = as.numeric(lat),
lng = as.numeric(lng))
# Creating list of border states
side<-heritage%>%
rename(clean_side = side)%>%
group_by(state, clean_side)%>%
count()%>%
filter(!is.na(clean_side))%>%
arrange(state)%>%
mutate(clean_side = case_when(
state =="AL" ~ "South",
state =="AR" ~ "South",
state == "TX" ~ "South",
state == "VA" ~ "South",
TRUE ~ clean_side
))%>%
select(-n)%>%
distinct()
# Join cleaned side with heritage
heritage<- heritage%>%
inner_join(side, by = c("state"))%>%
select(-side)%>%
rename(side = clean_side)
glimpse(heritage)
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = lat, lng = lng)
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = "lat", lng = "lng")
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng)
# Makin' a map
heritage%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng, popup = ~unique_id)
# Makin' a map
heritage%>%
filter(state == "CA")
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng, popup = ~unique_id)
# Makin' a map
heritage%>%
filter(state == "CA")%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng, popup = ~unique_id)
# Makin' a map
heritage%>%
filter(state == "DC")%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng, popup = ~unique_id)
# Makin' a map
heritage%>%
filter(state == "DC")%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng,
label = ~unique_id)
# Makin' a map
heritage%>%
filter(state == "DC", tracking_status != "Removed")%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng,
label = ~unique_id)
#
northern_states<- heritage%>%
filter (side =="North")%>%
group_by(state)%>%
summarise(count = n())%>%
arrange(desc(count))
northern_states
heritage%>%
group_by(state, side)%>%
summarize(count = n())
oh <-heritage%>%
filter( state =="OH")
# Doesn't give us an accurate picture — Cali has more "monuments" than other "northern" states, but some have an N/A value under "Northern." Wonder why!
View(oh)
heritage%>%
filter( tracking_status != "Removed", side == "North")%>%
group_by(symbol_type)
heritage%>%
filter( tracking_status != "Removed", side == "North")%>%
group_by(symbol_type)%>%
count()
# Makin' a map
heritage%>%
filter(state == "DC", tracking_status != "Removed")%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng,
label = ~unique_id)
# Only the monuments in Dc that are
View(heritage)
# Makin' a map
heritage%>%
filter(state == "DC", tracking_status)%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng,
label = ~unique_id)
# Makin' a map
heritage%>%
filter(state == "DC")%>%
leaflet()%>%
addProviderTiles(provider = "CartoDB.Positron")%>%
addMarkers(lat = ~lat, lng = ~lng,
label = ~unique_id)
# Only the monuments in Dc that are
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(jsonlite)
library(tibble)
library(tidyr)
library(lubridate)
library(janitor)
##Function to flatten nested data structures
nested_to_tbl = function(df){
df.tbl = df %>% flatten() %>% as_tibble()
}
view_nested = function(df, case_id, column){
View((df[df$case_id == case_id,column])[[1]][[1]])
}
View(view_nested)
View(nested_to_tbl)
#Load Data + convert to dataframe and run clean names to make nice column names
osha_inspections = fromJSON('osha_inspection_from_complaints.json')
df.osha_inspections = nested_to_tbl(osha_inspections) %>% clean_names()
covid_inspection_fromsite <- read_csv("C:/Users/nicho/OneDrive/2020 Nick McMillan/UMD/Spring 2021/Howard Center OSHA COVID/Before Project Analysis/OSHA Inspection Analysis/covid_inspection_fromsite.csv")
